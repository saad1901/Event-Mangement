# Generated by Django 5.0.4 on 2025-06-17 14:28

import datetime
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('sports', 'Sports'), ('esports', 'Esports'), ('cultural', 'Cultural'), ('academic', 'Academic'), ('technology', 'Technology'), ('other', 'Other')], max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('full_name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, help_text='Email address for updates and notifications', max_length=254, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('wp', models.CharField(blank=True, help_text='WhatsApp number for updates', max_length=10)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('confirmed', 'Confirmed'), ('checked_in', 'Checked In'), ('eliminated', 'Eliminated'), ('winner', 'Winner'), ('disqualified', 'Disqualified'), ('rejected', 'Rejected')], default='registered', max_length=20)),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='UPIS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upi_id', models.CharField(help_text='UPI ID for payment collection', max_length=100, unique=True)),
                ('nickname', models.CharField(blank=True, help_text='Nickname for the UPI ID', max_length=100, null=True, unique=True)),
                ('name', models.CharField(help_text='Name associated with the UPI ID', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChessPlayer',
            fields=[
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='chess_profile', serialize=False, to='app.participant')),
                ('fide_id', models.CharField(blank=True, max_length=20)),
                ('national_id', models.CharField(blank=True, max_length=20)),
                ('title', models.CharField(blank=True, choices=[('', 'No Title'), ('GM', 'Grandmaster (GM)'), ('IM', 'International Master (IM)'), ('FM', 'FIDE Master (FM)'), ('CM', 'Candidate Master (CM)'), ('WGM', 'Woman Grandmaster (WGM)'), ('WIM', 'Woman International Master (WIM)'), ('WFM', 'Woman FIDE Master (WFM)'), ('WCM', 'Woman Candidate Master (WCM)')], max_length=5)),
                ('fide_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('national_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('rapid_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('blitz_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('section', models.CharField(choices=[('open', 'Open'), ('u1600', 'Under 1600'), ('u1400', 'Under 1400'), ('u1200', 'Under 1200'), ('u1000', 'Under 1000')], max_length=10)),
                ('federation', models.CharField(max_length=100)),
                ('club_academy', models.CharField(blank=True, max_length=200)),
                ('is_arbiter', models.BooleanField(default=False)),
                ('previous_tournaments', models.TextField(blank=True)),
                ('achievements', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Chess Player',
                'verbose_name_plural': 'Chess Players',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('tournament_time', models.TimeField(default=datetime.time(10, 0))),
                ('registration_deadline', models.DateTimeField()),
                ('venue', models.CharField(max_length=200)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('max_participants', models.PositiveIntegerField()),
                ('min_participants', models.PositiveIntegerField(default=2)),
                ('entry_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prize_pool', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tournament_format', models.CharField(max_length=100)),
                ('rules', models.TextField()),
                ('banner_image', models.ImageField(upload_to='tournament_banners/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20)),
                ('facebook_event', models.URLField(blank=True)),
                ('instagram_post', models.URLField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournaments', to='app.category')),
                ('organizer', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organized_tournaments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddField(
            model_name='participant',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='app.tournament'),
        ),
        migrations.CreateModel(
            name='TournamentAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_important', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='app.tournament')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TournamentImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='tournament_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_images', to='app.tournament')),
            ],
        ),
        migrations.AddField(
            model_name='tournament',
            name='additional_images',
            field=models.ManyToManyField(blank=True, related_name='additional_tournaments', to='app.tournamentimage'),
        ),
        migrations.CreateModel(
            name='TournamentSponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('logo', models.ImageField(upload_to='sponsor_logos/')),
                ('website', models.URLField(blank=True)),
                ('sponsorship_level', models.CharField(max_length=50)),
                ('contribution', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sponsors', to='app.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('payment_reference', models.CharField(blank=True, help_text='Transaction ID or UPI reference number', max_length=100)),
                ('payment_screenshot', models.ImageField(blank=True, help_text='Screenshot of payment confirmation', upload_to='payment_proofs/')),
                ('ticket_count', models.PositiveIntegerField(default=1)),
                ('ticket_numbers', models.CharField(blank=True, help_text='Comma-separated ticket numbers', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['payment_status'], name='app_transac_payment_acb0ad_idx')],
            },
        ),
        migrations.AddField(
            model_name='participant',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_record', to='app.transaction'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='upi_id',
            field=models.ForeignKey(blank=True, help_text='UPI ID for payment collection', max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournaments', to='app.upis'),
        ),
        migrations.CreateModel(
            name='TournamentPrize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
                ('prize_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prizes', to='app.tournament')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prizes_won', to='app.participant')),
            ],
            options={
                'ordering': ['position'],
                'unique_together': {('tournament', 'position')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='participant',
            unique_together={('tournament', 'email')},
        ),
    ]
